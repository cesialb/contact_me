Features:
- hold contacts and their information
  - name, phone number, email
- can add and remove contacts from the list 
- can edit information about an existing contacts

Pages:
- main page
  - displays all contacts and their information
  - link to individual contact page to edit information
- individual contact page
  - allows user to edit information, delete contact

Database Structure:
- one table
  - id serial PRIMARY KEY
  - name text
  - phone number text (restrictions on length and format)
  - email address text

# Problem
  - create contact list application
  - should be able to view all users at once
  - be able to edit existing information
  - be able to delete users from the contact list
  - be able to add users to the contact list
  - be able to check for duplicated contacts
  - be able to validate for correct phone numbers

# Algorithm
  - start off with a database structure
    - build the table with a schema.sql
      - name text (no restrictions)
      - phone char(10) (eventually make sure it's 0-9 only)
      - email address text
    - insert sample data for users manually
  - build a DatabasePersistence class to build an API to interface w/application
    - #all_users
      - return name for now using SQL
  - build the view all users page from there
    - get '/'
      - get the hash 
    
# TODO
  - validate phone numbers



